
/* Styling using the element tag itself */
body{
    /*This will affect the body as a structure and not the individual elements inside the body*/
    background-color: white;
    /*All the text in the body, unless specified, will be green */
    color:black;
    font-family: Arial, Helvetica, sans-serif;
    font-size: 18px;
    font-weight: normal;
    /* I can specify the font features by using a shorter way */
    font: Arial, 18px, normal;
    /*This increases the line between texts*/
    line-height: 1.5em;
    margin: 0;

}

/*This is a global css property and affects all elements in the document*/
/*Used for control flow when using the float property(no elements can appear on the side that is clear) and on top of each other */
.clr{
    clear:both;
}


/*To ensure that the text or elements don't touch the sides of the page, we use a CONTAINER CLASS*/
.container{
    /*making the width in percentages will make the container class be responsive when the screen size changes*/
    width: 80%;
    /*margin-auto will place the container at the center of the page. MARGIN MEANS SPACING AROUND AN ELEMENT OUTSIDE ITS BORDER */
    margin: auto;
}

.button{
    background-color: black;
    color: white;
    padding: 10px 15px;
    border: none;
}


/*Classes are given to specific group of element tags inside another element tag that only the CSS belongs to for example <card>, <footer>, <div> */
.box-1{
    background-color:#333;
    color: white;
    
    /*Changes the specified part of the border*/
    border-bottom-width:8px ;
    border-top-style:dotted;

    /*The sequence goes as SIZE, COLOR, STYLE */
    border: 3px blue dotted;


    /*PADDING IS THE SPACE BETWEEN AN ELEMENT AND ITS BORDER*/
    /*The sequence goes as TOP, BOTTOM, RIGHT, LEFT */
    padding: 20px 10px 10px 10px;


    margin: 20px 20px;
}


/*Targetting a specific element inside a an element with a class*/
.box-1 h1{
    color: green;
    font-family: tahoma;
    font-style: italic;
    font-weight: 200;
    text-decoration: underline;
    /*Make the text in uppercase*/
    text-transform: uppercase;
}

.box-2{
    border: 3px red dotted;
    padding: 20px 10px;
    margin: 20px 20px;
}

.categories{
    /*Changes will affect the whole class and not the specific List*/
    border: 1px black dotted;
    padding: 20px;
    margin: 20px;
    /*This will make the edges of the border change and become a bit curved*/
    border-radius: 15px;
}

.categories h2{
    text-align: center;
}

.categories ul{
    padding: 20px;
    /*This will remove the bullets or whatever list style was before*/
    list-style: none;
} 

/*This styling will affect all the <a> tags in the document*/
a {
    text-decoration: none;
    color: black;
}

a:hover{
    /* When the <a> tag has the cursor ontop,  it will change to blue color */
    color:blue;
}

a:active{
    /*When I Click on the link, it wil flash some color */
    color: green;
}

.categories li{
    padding: 8px;
    border-bottom:black 1px solid;
    /*I can use an image as a list style for the <li>*/
    list-style-image: url('../CSSCHEATSHEET/Images/green-check.png');
}

.my-form{
    padding: 20px;
}

.form-group{
    /*This will target all individual div classes that rep the form fields*/
    padding-bottom: 25px;
}

.my-form label{
    /*This will rep the label tags for the form fields as they are all in the 'my-form' classs*/
    /*placing this property will mmake the labels be in their own line separate from the inputs they rep*/
    display:block;
}

.my-form input[type="text"], .my-form [type="text-area"]{
    /*The [type="text] will specify that these css properties are for the text inputs only */
    padding: 8px;
    width: 100%;
}

/*FLOATING AND ALIGNMENT*/
.block{
    float:left;
    /*Floating left will position the elements at the left*/
    width:33.3%;
    border:1px solid black;
    padding:10px;
    /*The box-sizing command takes the border and padding properties and applies it into the width. Placing the boxes in a single line */
    box-sizing:border-box;
}


/*IDs are given to specific element tags that only the CSS belongs to for example <navbar>, <footer-head> */

#main-block{
    float: left;
    width: 70%;
    box-sizing: border-box;
    padding:15px;
}

/*The sidebar will be placeed on the right side of the page*/
#sidebar{
    float: right;
    width: 30%;
    background-color: #333;
    color:white;
    /*The box-sizing command takes the border and padding properties and applies it into the with. Placing the boxes in a single line */
    box-sizing: border-box;
    padding:15px;
    margin-top:15px;
}

/*POSITIONING*/
/*Static(default) renders the elements in order of the document flow */
/*Initial places the property to its defaut value */
/*Inherit means an element will inherit the property of the parent element*/
/*Relative the element is positioned relative to its normal position but we can add properties like 'top' 'bottom' 'left' 'right' */
.p-box{
    width:800px;
    height: 500px;
    border: 1px solid black;
    margin-top:30px;
    color:green;
    /*Relative position will enable us move the child elements within the parent element to whatever position we want*/
    position: relative;

/*SETTING AN IMAGE AS THE BACKGROUND OF AN ELEMENT */
    background-image: url("../Images/light.jpg");
    /*This will place the image 100px top and 200px at the bottom*/
    background-position: 100px 200px;
    /*This can specify which position to place the image within the element */
    background-position: center;
    /*The image won't repeat itself within the element*/
    background-repeat: no-repeat;
    /*This will set the image to cover the whole element as its background*/
    background-size:cover;
  
}

/*Absolute targets whatever position we want inside a relative position */
.p-box h1{
    /*Absolute position will place the child element(h1) at any position I place it to be inside the parent element(div)*/
    position: absolute;
    top:40px;
    left: 200px;
}

.p-box h2{
    position:absolute;
    right: 200px;
    bottom: 200px;
}
/*Fixed means a fixed position in the browser window */
.fix-me{
    /*The position must be stated in the property. Fixed position will make the element stuck at whatever position I state*/
    position: fixed;
    top: 400px;
}


/*PSEUDO CLASSES*/
/*This will target the  first child-element(li) in the ul element*/
.my-list li:first-child{
    background: red ;
}
/*This will target the  last child-element(li) in the ul element*/
.my-list li:last-child{
    background:blue ;
}
/*To target a specific child element using its number position eg 1,2,3 I will write*/
.my-list li:nth-child(6){
    background: yellow;
}
/*All the even-positioned elements will have a grey color*/
.my-list li:nth-child(even){
    background:grey;
}

/*CHECKOUT BOX MODEL IN CSS */




